.app-main
  .app-main__header
    .app-main__header__message
      .list1
        総合１位　
      .list2
        部門別１位
      .list3
        部門別１位
    .app-main__header__items
      .right-items
        .right-items__image
          image
        .right-items__nickname
          name
      .center-items
        .center-items__image
          image2
        .center-items__nickname
          name2
      .left-items
        .left-items__image
          image3
        .left-items__nickname
          name3


  .app-main__body
    - @pictures.each do |picture|
      
      .app-main__body__group
        .picture-image
          - if current_user.already_liked?(picture)
            = link_to favorite_path(picture.id), method: :delete do
              = image_tag picture.image.url, class: "image-url", alt: "image.url"
          - else
            = link_to picture_add_path(picture.id), method: :post do
              = image_tag picture.image.url, class: "image-url", alt: "image.url"
        .review-group
          .picture-name
            - unless current_user.id == picture.user.id
              - if current_user.following?(picture.user)
                - @follow = current_user.relationships.find_by(follow_id: picture.user.id)
                = link_to relationship_path(@follow, follow_id: picture.user.id), method: :delete do
                  =picture.user.nickname
              - else
                = link_to relationships_path(relationships: relationships_url, follow_id: picture.user.id),method: :post do
                  =picture.user.nickname
            - else
              =picture.user.nickname
          .review-items
            .review-items__icons
              .review-items__icons__left
              .review-items__icons__center
              .review-items__icons__right
            .review-items__comments
              .comments-box
                - if user_signed_in? && current_user.id == picture.user_id
                  .input-box
                - elsif user_signed_in? 
                  - @picture = picture
                  = form_for  [@picture, @comment] do |f|
                    .input-box
                      = f.text_field :comments, class: 'message-box', placeholder: 'コメントをどうぞ' 
                      = f.submit 'Send', class: 'submit-btn'


-# = form_for(current_user.relationships.new) do |f|
-#   = f.hidden_field :follow_id, value: picture.user.id 
-#   = f.button class: 'follows' do
-# = form_for(current_user.relationships.find_by(follow_id: user.id), html: { method: :delete }) do |f|
-#   = f.hidden_field :follow_id, value: picture.user.id 
-#   = f.submit 'フォロー中', class: 'follow-now'
              
-# = link_to relationships_path, follow_id: picture.user.id, method: :post do
      -# = picture.user.nickname